// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test_user.proto

package dbagent

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type TestUser struct {
	Id       int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Account  string `protobuf:"bytes,2,opt,name=account" json:"account,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
}

func (m *TestUser) Reset()                    { *m = TestUser{} }
func (m *TestUser) String() string            { return proto.CompactTextString(m) }
func (*TestUser) ProtoMessage()               {}
func (*TestUser) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *TestUser) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TestUser) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *TestUser) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type ListUser struct {
	Users []*TestUser `protobuf:"bytes,1,rep,name=users" json:"users,omitempty"`
}

func (m *ListUser) Reset()                    { *m = ListUser{} }
func (m *ListUser) String() string            { return proto.CompactTextString(m) }
func (*ListUser) ProtoMessage()               {}
func (*ListUser) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *ListUser) GetUsers() []*TestUser {
	if m != nil {
		return m.Users
	}
	return nil
}

func init() {
	proto.RegisterType((*TestUser)(nil), "dbagent.TestUser")
	proto.RegisterType((*ListUser)(nil), "dbagent.ListUser")
}

func init() { proto.RegisterFile("test_user.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 152 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x49, 0x2d, 0x2e,
	0x89, 0x2f, 0x2d, 0x4e, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4f, 0x49, 0x4a,
	0x4c, 0x4f, 0xcd, 0x2b, 0x51, 0x0a, 0xe0, 0xe2, 0x08, 0x49, 0x2d, 0x2e, 0x09, 0x2d, 0x4e, 0x2d,
	0x12, 0xe2, 0xe3, 0x62, 0xca, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0e, 0x62, 0xca, 0x4c,
	0x11, 0x92, 0xe0, 0x62, 0x4f, 0x4c, 0x4e, 0xce, 0x2f, 0xcd, 0x2b, 0x91, 0x60, 0x52, 0x60, 0xd4,
	0xe0, 0x0c, 0x82, 0x71, 0x85, 0xa4, 0xb8, 0x38, 0x0a, 0x12, 0x8b, 0x8b, 0xcb, 0xf3, 0x8b, 0x52,
	0x24, 0x98, 0xc1, 0x52, 0x70, 0xbe, 0x92, 0x31, 0x17, 0x87, 0x4f, 0x26, 0xd4, 0x44, 0x75, 0x2e,
	0x56, 0x90, 0xa5, 0xc5, 0x12, 0x8c, 0x0a, 0xcc, 0x1a, 0xdc, 0x46, 0x82, 0x7a, 0x50, 0x6b, 0xf5,
	0x60, 0x76, 0x06, 0x41, 0xe4, 0x93, 0xd8, 0xc0, 0xce, 0x32, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff,
	0xf0, 0x44, 0x47, 0x8b, 0xa9, 0x00, 0x00, 0x00,
}

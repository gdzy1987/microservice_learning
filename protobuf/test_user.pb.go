// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test_user.proto

package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TestUser struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Account              string   `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestUser) Reset()         { *m = TestUser{} }
func (m *TestUser) String() string { return proto.CompactTextString(m) }
func (*TestUser) ProtoMessage()    {}
func (*TestUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_test_user_59e09ba130a5958d, []int{0}
}
func (m *TestUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestUser.Unmarshal(m, b)
}
func (m *TestUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestUser.Marshal(b, m, deterministic)
}
func (dst *TestUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestUser.Merge(dst, src)
}
func (m *TestUser) XXX_Size() int {
	return xxx_messageInfo_TestUser.Size(m)
}
func (m *TestUser) XXX_DiscardUnknown() {
	xxx_messageInfo_TestUser.DiscardUnknown(m)
}

var xxx_messageInfo_TestUser proto.InternalMessageInfo

func (m *TestUser) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TestUser) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *TestUser) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type ListUser struct {
	Users                []*TestUser `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListUser) Reset()         { *m = ListUser{} }
func (m *ListUser) String() string { return proto.CompactTextString(m) }
func (*ListUser) ProtoMessage()    {}
func (*ListUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_test_user_59e09ba130a5958d, []int{1}
}
func (m *ListUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUser.Unmarshal(m, b)
}
func (m *ListUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUser.Marshal(b, m, deterministic)
}
func (dst *ListUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUser.Merge(dst, src)
}
func (m *ListUser) XXX_Size() int {
	return xxx_messageInfo_ListUser.Size(m)
}
func (m *ListUser) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUser.DiscardUnknown(m)
}

var xxx_messageInfo_ListUser proto.InternalMessageInfo

func (m *ListUser) GetUsers() []*TestUser {
	if m != nil {
		return m.Users
	}
	return nil
}

func init() {
	proto.RegisterType((*TestUser)(nil), "protobuf.TestUser")
	proto.RegisterType((*ListUser)(nil), "protobuf.ListUser")
}

func init() { proto.RegisterFile("test_user.proto", fileDescriptor_test_user_59e09ba130a5958d) }

var fileDescriptor_test_user_59e09ba130a5958d = []byte{
	// 149 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x49, 0x2d, 0x2e,
	0x89, 0x2f, 0x2d, 0x4e, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x53, 0x49,
	0xa5, 0x69, 0x4a, 0x01, 0x5c, 0x1c, 0x21, 0xa9, 0xc5, 0x25, 0xa1, 0xc5, 0xa9, 0x45, 0x42, 0x7c,
	0x5c, 0x4c, 0x99, 0x29, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xcc, 0x41, 0x4c, 0x99, 0x29, 0x42, 0x12,
	0x5c, 0xec, 0x89, 0xc9, 0xc9, 0xf9, 0xa5, 0x79, 0x25, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41,
	0x30, 0xae, 0x90, 0x14, 0x17, 0x47, 0x41, 0x62, 0x71, 0x71, 0x79, 0x7e, 0x51, 0x8a, 0x04, 0x33,
	0x58, 0x0a, 0xce, 0x57, 0x32, 0xe1, 0xe2, 0xf0, 0xc9, 0x84, 0x9a, 0xa8, 0xc1, 0xc5, 0x0a, 0xb2,
	0xb5, 0x58, 0x82, 0x51, 0x81, 0x59, 0x83, 0xdb, 0x48, 0x48, 0x0f, 0x66, 0xaf, 0x1e, 0xcc, 0xd2,
	0x20, 0x88, 0x82, 0x24, 0x36, 0xb0, 0x8c, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x25, 0xdd, 0x5b,
	0xf3, 0xab, 0x00, 0x00, 0x00,
}
